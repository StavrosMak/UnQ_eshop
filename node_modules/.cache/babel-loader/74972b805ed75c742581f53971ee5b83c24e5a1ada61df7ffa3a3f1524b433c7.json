{"ast":null,"code":"var _jsxFileName = \"/home/stv/Documents/Web/React/ecommerce/src/App.js\",\n  _s = $RefreshSig$();\nimport Navbar from './components/Navbar/Navbar';\nimport Footer from './components/Footer/Footer';\nimport { Route, Routes } from \"react-router-dom\";\nimport Home from './Routes/Home';\nimport Products from './Routes/Products';\nimport Cart from './components/Cart/Cart';\nimport { useState, useEffect } from 'react';\nimport AboutUs from './components/AboutUs/AboutUs';\nimport { useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // scrolll \n  const {\n    pathname\n  } = useLocation();\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  // about cart.\n\n  // 1. add to cart\n  const [cart, setCart] = useState([]);\n  const handleAddToCart = item => {\n    const existingItemIndex = cart.findIndex(cartItem => cartItem.id === item.id); //checks if productID already exists. - If yes then return the Index.\n\n    if (existingItemIndex !== -1) {\n      //if exists then..\n\n      const updatedCart = [...cart]; //generate a copy of current cart array -This is done to ensure\n      //that the original cart array is not modified directly.\n\n      const updatedItem = {\n        ...updatedCart[existingItemIndex]\n      }; //This creates a copy of the existing item object that needs to be updated \n      //The existingItemIndex variable is used to access the existing \n      updatedItem.quantity += 1; //This updates the quantity property of the updatedItem object by adding 1 to it.\n\n      updatedCart[existingItemIndex] = updatedItem; //This replaces the existing item object in the \n      //updatedCart array with the updated item object. \n\n      setCart(updatedCart);\n\n      // Εν συντομία: Αρχικα ελεγχουμε εαν υπαρχει το αντικειμενο στο cart. Εαν ναι τοτε βρισκουμε το INDEX του.\n      // Επειτα φτιαχνουμε ενα αντιγραφο του Cart γτ δν μπορουμε να πειράξουμε κατευθείαν το αρχικο object cart.\n      // Μετα πρεπει να βρούμε το αντικειμενο που υπάρχει ηδη μεσα και να αυξήσουμε την ποσότητα...Ξερουμε το index του(existingItemIndex) ΟΠΟΤΕ \n      // παμε στον updatedCart πινακα και παίρνουμε μονο αυτο το αντικειμενο που μας ενδιαφέρει και του αυξάνουμε την ποσότητα.\n      // Τελος αφου τα κανουμε ολα αυτα μπορουμε να τροποποιησουμε το αρχικο Cart με την συναρτηση setCart \n    } else {\n      setCart([...cart, {\n        ...item,\n        quantity: 1\n      }]);\n    }\n  };\n\n  // 2. Display Cart\n  const [cartVisible, setCartVisible] = useState(false);\n  const toggleCart = () => {\n    setCartVisible(!cartVisible);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      size: cart.length,\n      toggleCart: toggleCart\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), \" toggleCart is responsible for handleClickOnCart -- its set the cartVisible=true/false in every click\", /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Home, {\n          handleAddToCart: handleAddToCart\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/products\",\n        element: /*#__PURE__*/_jsxDEV(Products, {\n          handleAddToCart: handleAddToCart\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), cartVisible && /*#__PURE__*/_jsxDEV(Cart, {\n      cart: cart,\n      cartVisible: cartVisible,\n      setCart: setCart\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 23\n    }, this), \" \", /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"K4CO6AsRBVdsIAE9y5AgMFxjJPk=\", false, function () {\n  return [useLocation];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Navbar","Footer","Route","Routes","Home","Products","Cart","useState","useEffect","AboutUs","useLocation","jsxDEV","_jsxDEV","App","_s","pathname","window","scrollTo","cart","setCart","handleAddToCart","item","existingItemIndex","findIndex","cartItem","id","updatedCart","updatedItem","quantity","cartVisible","setCartVisible","toggleCart","className","children","size","length","fileName","_jsxFileName","lineNumber","columnNumber","path","element","_c","$RefreshReg$"],"sources":["/home/stv/Documents/Web/React/ecommerce/src/App.js"],"sourcesContent":["import Navbar from './components/Navbar/Navbar';\nimport Footer from './components/Footer/Footer';\nimport { Route, Routes } from \"react-router-dom\"\nimport Home from './Routes/Home';\nimport Products from './Routes/Products';\nimport Cart from './components/Cart/Cart'\nimport { useState, useEffect } from 'react'\nimport AboutUs from './components/AboutUs/AboutUs';\n\nimport { useLocation } from 'react-router-dom';\n\nfunction App() {\n\n\n\n  // scrolll \n  const { pathname } = useLocation();\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n\n  // about cart.\n\n  // 1. add to cart\n  const [cart, setCart] = useState([]);\n\n\n  const handleAddToCart = (item) => {\n\n    const existingItemIndex = cart.findIndex((cartItem) => cartItem.id === item.id); //checks if productID already exists. - If yes then return the Index.\n\n    if (existingItemIndex !== -1) { //if exists then..\n\n      const updatedCart = [...cart]; //generate a copy of current cart array -This is done to ensure\n      //that the original cart array is not modified directly.\n\n      const updatedItem = { ...updatedCart[existingItemIndex] }; //This creates a copy of the existing item object that needs to be updated \n      //The existingItemIndex variable is used to access the existing \n      updatedItem.quantity += 1; //This updates the quantity property of the updatedItem object by adding 1 to it.\n\n      updatedCart[existingItemIndex] = updatedItem; //This replaces the existing item object in the \n      //updatedCart array with the updated item object. \n\n\n      setCart(updatedCart);\n\n\n      // Εν συντομία: Αρχικα ελεγχουμε εαν υπαρχει το αντικειμενο στο cart. Εαν ναι τοτε βρισκουμε το INDEX του.\n      // Επειτα φτιαχνουμε ενα αντιγραφο του Cart γτ δν μπορουμε να πειράξουμε κατευθείαν το αρχικο object cart.\n      // Μετα πρεπει να βρούμε το αντικειμενο που υπάρχει ηδη μεσα και να αυξήσουμε την ποσότητα...Ξερουμε το index του(existingItemIndex) ΟΠΟΤΕ \n      // παμε στον updatedCart πινακα και παίρνουμε μονο αυτο το αντικειμενο που μας ενδιαφέρει και του αυξάνουμε την ποσότητα.\n      // Τελος αφου τα κανουμε ολα αυτα μπορουμε να τροποποιησουμε το αρχικο Cart με την συναρτηση setCart \n\n    } else {\n\n      setCart([...cart, { ...item, quantity: 1 }]);\n\n    }\n  };\n\n\n\n\n\n  // 2. Display Cart\n  const [cartVisible, setCartVisible] = useState(false);\n  const toggleCart = () => {\n    setCartVisible(!cartVisible);\n  }\n\n\n  return (\n    <div className=\"App\">\n      <Navbar size={cart.length} toggleCart={toggleCart} /> toggleCart is responsible for handleClickOnCart -- its set the cartVisible=true/false in every click\n      <Routes>\n        <Route path=\"/\" element={<Home handleAddToCart={handleAddToCart} />} />\n        <Route path=\"/products\" element={<Products handleAddToCart={handleAddToCart} />} />\n      </Routes>\n      {cartVisible && <Cart cart={cart} cartVisible={cartVisible} setCart={setCart} />} {/*If cartVisible then render the component */}\n      <Footer />\n\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}