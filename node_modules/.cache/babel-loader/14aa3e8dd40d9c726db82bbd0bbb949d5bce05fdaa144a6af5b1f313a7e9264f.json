{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nconst useCart = () => {\n  _s();\n  const [cart, setCart] = useState([]);\n  const [cartVisible, setCartVisible] = useState(false);\n  const [cartLength, setCartLength] = useState(0);\n  useEffect(() => {\n    //!init\n    const initialCart = JSON.parse(localStorage.getItem('cart')) || [];\n    setCart(initialCart);\n  }, []);\n  const handleQuantityChange = (item, change) => {\n    const updatedCart = [...cart];\n    const updatedItemIndex = updatedCart.findIndex(cartItem => cartItem.id === item.id);\n    const updatedItem = {\n      ...updatedCart[updatedItemIndex]\n    };\n    updatedItem.quantity += change;\n    updatedItem.quantity <= 0 ? updatedCart.splice(updatedItemIndex, 1) : updatedCart[updatedItemIndex] = updatedItem;\n    setCart(updatedCart);\n    setCartLength(updatedCart.reduce((total, item) => total + item.quantity, 0));\n  };\n  useEffect(() => {\n    //!setItem to localStorage\n    localStorage.setItem('cart', JSON.stringify(cart));\n    setCartLength(cart.reduce((total, item) => total + item.quantity, 0));\n  }, [cart]);\n  const handleAddToCart = item => {\n    //!Add to cart \n    const existingItem = cart.find(cartItem => cartItem.id === item.id);\n    if (existingItem) {\n      setCart(cart.map(cartItem => cartItem.id === item.id ? {\n        ...cartItem,\n        quantity: cartItem.quantity + 1\n      } : cartItem));\n    } else {\n      setCart([...cart, {\n        ...item,\n        quantity: 1\n      }]);\n    }\n  };\n  const toggleCart = () => {\n    setCartVisible(!cartVisible);\n  };\n  return {\n    handleAddToCart,\n    toggleCart,\n    setCartLength,\n    setCart,\n    cart,\n    cartLength,\n    cartVisible,\n    setCartVisible\n  };\n};\n_s(useCart, \"OM6vXvCEuYwae3OWdv2lhqG87b8=\");\nexport default useCart;","map":{"version":3,"names":["useState","useEffect","useCart","_s","cart","setCart","cartVisible","setCartVisible","cartLength","setCartLength","initialCart","JSON","parse","localStorage","getItem","handleQuantityChange","item","change","updatedCart","updatedItemIndex","findIndex","cartItem","id","updatedItem","quantity","splice","reduce","total","setItem","stringify","handleAddToCart","existingItem","find","map","toggleCart"],"sources":["/home/stv/Documents/Web/React/ecommerce/src/useCart.js"],"sourcesContent":["import { useState, useEffect } from 'react';\n\nconst useCart = () => {\n    const [cart, setCart] = useState([]);\n    const [cartVisible, setCartVisible] = useState(false);\n    const [cartLength, setCartLength] = useState(0);\n\n\n    useEffect(() => { //!init\n        const initialCart = JSON.parse(localStorage.getItem('cart')) || [];\n        setCart(initialCart);\n    }, []);\n    const handleQuantityChange = (item, change) => {\n        const updatedCart = [...cart];\n        const updatedItemIndex = updatedCart.findIndex((cartItem) => cartItem.id === item.id);\n        const updatedItem = { ...updatedCart[updatedItemIndex] };\n        updatedItem.quantity += change;\n        updatedItem.quantity <= 0 ? updatedCart.splice(updatedItemIndex, 1) : (updatedCart[updatedItemIndex] = updatedItem);\n        setCart(updatedCart);\n        setCartLength(updatedCart.reduce((total, item) => total + item.quantity, 0));\n      };\n\n\n    useEffect(() => { //!setItem to localStorage\n        localStorage.setItem('cart', JSON.stringify(cart));\n        setCartLength(cart.reduce((total, item) => total + item.quantity, 0));\n\n    }, [cart]);\n\n\n    const handleAddToCart = (item) => { //!Add to cart \n        const existingItem = cart.find((cartItem) => cartItem.id === item.id);\n\n        if (existingItem) {\n            setCart(cart.map((cartItem) => (cartItem.id === item.id ? { ...cartItem, quantity: cartItem.quantity + 1 } : cartItem)));\n        } else {\n            setCart([...cart, { ...item, quantity: 1 }]);\n        }\n    };\n\n\n    const toggleCart = () => {\n        setCartVisible(!cartVisible);\n      };\n    \n    \n\n    return { handleAddToCart, toggleCart,setCartLength, setCart, cart, cartLength, cartVisible, setCartVisible };\n};\n\nexport default useCart;"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACM,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACQ,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;EAG/CC,SAAS,CAAC,MAAM;IAAE;IACd,MAAMS,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE;IAClET,OAAO,CAACK,WAAW,CAAC;EACxB,CAAC,EAAE,EAAE,CAAC;EACN,MAAMK,oBAAoB,GAAGA,CAACC,IAAI,EAAEC,MAAM,KAAK;IAC3C,MAAMC,WAAW,GAAG,CAAC,GAAGd,IAAI,CAAC;IAC7B,MAAMe,gBAAgB,GAAGD,WAAW,CAACE,SAAS,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,EAAE,KAAKN,IAAI,CAACM,EAAE,CAAC;IACrF,MAAMC,WAAW,GAAG;MAAE,GAAGL,WAAW,CAACC,gBAAgB;IAAE,CAAC;IACxDI,WAAW,CAACC,QAAQ,IAAIP,MAAM;IAC9BM,WAAW,CAACC,QAAQ,IAAI,CAAC,GAAGN,WAAW,CAACO,MAAM,CAACN,gBAAgB,EAAE,CAAC,CAAC,GAAID,WAAW,CAACC,gBAAgB,CAAC,GAAGI,WAAY;IACnHlB,OAAO,CAACa,WAAW,CAAC;IACpBT,aAAa,CAACS,WAAW,CAACQ,MAAM,CAAC,CAACC,KAAK,EAAEX,IAAI,KAAKW,KAAK,GAAGX,IAAI,CAACQ,QAAQ,EAAE,CAAC,CAAC,CAAC;EAC9E,CAAC;EAGHvB,SAAS,CAAC,MAAM;IAAE;IACdY,YAAY,CAACe,OAAO,CAAC,MAAM,EAAEjB,IAAI,CAACkB,SAAS,CAACzB,IAAI,CAAC,CAAC;IAClDK,aAAa,CAACL,IAAI,CAACsB,MAAM,CAAC,CAACC,KAAK,EAAEX,IAAI,KAAKW,KAAK,GAAGX,IAAI,CAACQ,QAAQ,EAAE,CAAC,CAAC,CAAC;EAEzE,CAAC,EAAE,CAACpB,IAAI,CAAC,CAAC;EAGV,MAAM0B,eAAe,GAAId,IAAI,IAAK;IAAE;IAChC,MAAMe,YAAY,GAAG3B,IAAI,CAAC4B,IAAI,CAAEX,QAAQ,IAAKA,QAAQ,CAACC,EAAE,KAAKN,IAAI,CAACM,EAAE,CAAC;IAErE,IAAIS,YAAY,EAAE;MACd1B,OAAO,CAACD,IAAI,CAAC6B,GAAG,CAAEZ,QAAQ,IAAMA,QAAQ,CAACC,EAAE,KAAKN,IAAI,CAACM,EAAE,GAAG;QAAE,GAAGD,QAAQ;QAAEG,QAAQ,EAAEH,QAAQ,CAACG,QAAQ,GAAG;MAAE,CAAC,GAAGH,QAAS,CAAC,CAAC;IAC5H,CAAC,MAAM;MACHhB,OAAO,CAAC,CAAC,GAAGD,IAAI,EAAE;QAAE,GAAGY,IAAI;QAAEQ,QAAQ,EAAE;MAAE,CAAC,CAAC,CAAC;IAChD;EACJ,CAAC;EAGD,MAAMU,UAAU,GAAGA,CAAA,KAAM;IACrB3B,cAAc,CAAC,CAACD,WAAW,CAAC;EAC9B,CAAC;EAIH,OAAO;IAAEwB,eAAe;IAAEI,UAAU;IAACzB,aAAa;IAAEJ,OAAO;IAAED,IAAI;IAAEI,UAAU;IAAEF,WAAW;IAAEC;EAAe,CAAC;AAChH,CAAC;AAACJ,EAAA,CA9CID,OAAO;AAgDb,eAAeA,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}