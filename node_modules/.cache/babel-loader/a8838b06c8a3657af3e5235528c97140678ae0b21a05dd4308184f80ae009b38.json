{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nconst useCart = () => {\n  _s();\n  const [cart, setCart] = useState([]);\n  const [cartVisible, setCartVisible] = useState(false);\n  const [cartLength, setCartLength] = useState(0);\n  useEffect(() => {\n    //!init\n    const initialCart = JSON.parse(localStorage.getItem('cart')) || [];\n    setCart(initialCart);\n  }, []);\n  useEffect(() => {\n    //!setItem to localStorage\n    localStorage.setItem('cart', JSON.stringify(cart));\n    setCartLength(cart.reduce((total, item) => total + item.quantity, 0));\n  }, [cart]);\n  const handleAddToCart = item => {\n    //!Add to cart \n    const existingItem = cart.find(cartItem => cartItem.id === item.id);\n    if (existingItem) {\n      setCart(cart.map(cartItem => cartItem.id === item.id ? {\n        ...cartItem,\n        quantity: cartItem.quantity + 1\n      } : cartItem));\n    } else {\n      setCart([...cart, {\n        ...item,\n        quantity: 1\n      }]);\n    }\n  };\n  const toggleCart = () => {\n    //! Toggle \n    setCartVisible(!cartVisible);\n  };\n  const handleQuantityChange = (item, change) => {\n    const updatedCart = [...cart];\n    const updatedItemIndex = updatedCart.findIndex(cartItem => cartItem.id === item.id);\n    const updatedItem = {\n      ...updatedCart[updatedItemIndex]\n    };\n    updatedItem.quantity += change;\n    updatedItem.quantity <= 0 ? updatedCart.splice(updatedItemIndex, 1) : updatedCart[updatedItemIndex] = updatedItem;\n    setCart(updatedCart);\n    setCartLength(updatedCart.reduce((total, item) => total + item.quantity, 0));\n  };\n  return {\n    handleAddToCart,\n    handleQuantityChange,\n    toggleCart,\n    setCartLength,\n    setCart,\n    cart,\n    cartLength,\n    cartVisible,\n    setCartVisible\n  };\n};\n_s(useCart, \"OM6vXvCEuYwae3OWdv2lhqG87b8=\");\nexport default useCart;","map":{"version":3,"names":["useState","useEffect","useCart","_s","cart","setCart","cartVisible","setCartVisible","cartLength","setCartLength","initialCart","JSON","parse","localStorage","getItem","setItem","stringify","reduce","total","item","quantity","handleAddToCart","existingItem","find","cartItem","id","map","toggleCart","handleQuantityChange","change","updatedCart","updatedItemIndex","findIndex","updatedItem","splice"],"sources":["/home/stv/Documents/Web/React/ecommerce/src/useCart.js"],"sourcesContent":["import { useState, useEffect } from 'react';\n\nconst useCart = () => {\n    const [cart, setCart] = useState([]);\n    const [cartVisible, setCartVisible] = useState(false);\n    const [cartLength, setCartLength] = useState(0);\n\n\n    useEffect(() => { //!init\n        const initialCart = JSON.parse(localStorage.getItem('cart')) || [];\n        setCart(initialCart);\n    }, []);\n\n\n\n    useEffect(() => { //!setItem to localStorage\n        localStorage.setItem('cart', JSON.stringify(cart));\n        setCartLength(cart.reduce((total, item) => total + item.quantity, 0));\n\n    }, [cart]);\n\n\n    const handleAddToCart = (item) => { //!Add to cart \n        const existingItem = cart.find((cartItem) => cartItem.id === item.id);\n\n        if (existingItem) {\n            setCart(cart.map((cartItem) => (cartItem.id === item.id ? { ...cartItem, quantity: cartItem.quantity + 1 } : cartItem)));\n        } else {\n            setCart([...cart, { ...item, quantity: 1 }]);\n        }\n    };\n\n\n    const toggleCart = () => { //! Toggle \n        setCartVisible(!cartVisible);\n    };\n\n\n    const handleQuantityChange = (item, change) => {\n        const updatedCart = [...cart];\n        const updatedItemIndex = updatedCart.findIndex((cartItem) => cartItem.id === item.id);\n        const updatedItem = { ...updatedCart[updatedItemIndex] };\n        updatedItem.quantity += change;\n        updatedItem.quantity <= 0 ? updatedCart.splice(updatedItemIndex, 1) : (updatedCart[updatedItemIndex] = updatedItem);\n        setCart(updatedCart);\n        setCartLength(updatedCart.reduce((total, item) => total + item.quantity, 0));\n    };\n\n\n    return { handleAddToCart, handleQuantityChange, toggleCart, setCartLength, setCart, cart, cartLength, cartVisible, setCartVisible };\n};\n\nexport default useCart;"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACM,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACQ,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;EAG/CC,SAAS,CAAC,MAAM;IAAE;IACd,MAAMS,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE;IAClET,OAAO,CAACK,WAAW,CAAC;EACxB,CAAC,EAAE,EAAE,CAAC;EAINT,SAAS,CAAC,MAAM;IAAE;IACdY,YAAY,CAACE,OAAO,CAAC,MAAM,EAAEJ,IAAI,CAACK,SAAS,CAACZ,IAAI,CAAC,CAAC;IAClDK,aAAa,CAACL,IAAI,CAACa,MAAM,CAAC,CAACC,KAAK,EAAEC,IAAI,KAAKD,KAAK,GAAGC,IAAI,CAACC,QAAQ,EAAE,CAAC,CAAC,CAAC;EAEzE,CAAC,EAAE,CAAChB,IAAI,CAAC,CAAC;EAGV,MAAMiB,eAAe,GAAIF,IAAI,IAAK;IAAE;IAChC,MAAMG,YAAY,GAAGlB,IAAI,CAACmB,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,EAAE,KAAKN,IAAI,CAACM,EAAE,CAAC;IAErE,IAAIH,YAAY,EAAE;MACdjB,OAAO,CAACD,IAAI,CAACsB,GAAG,CAAEF,QAAQ,IAAMA,QAAQ,CAACC,EAAE,KAAKN,IAAI,CAACM,EAAE,GAAG;QAAE,GAAGD,QAAQ;QAAEJ,QAAQ,EAAEI,QAAQ,CAACJ,QAAQ,GAAG;MAAE,CAAC,GAAGI,QAAS,CAAC,CAAC;IAC5H,CAAC,MAAM;MACHnB,OAAO,CAAC,CAAC,GAAGD,IAAI,EAAE;QAAE,GAAGe,IAAI;QAAEC,QAAQ,EAAE;MAAE,CAAC,CAAC,CAAC;IAChD;EACJ,CAAC;EAGD,MAAMO,UAAU,GAAGA,CAAA,KAAM;IAAE;IACvBpB,cAAc,CAAC,CAACD,WAAW,CAAC;EAChC,CAAC;EAGD,MAAMsB,oBAAoB,GAAGA,CAACT,IAAI,EAAEU,MAAM,KAAK;IAC3C,MAAMC,WAAW,GAAG,CAAC,GAAG1B,IAAI,CAAC;IAC7B,MAAM2B,gBAAgB,GAAGD,WAAW,CAACE,SAAS,CAAER,QAAQ,IAAKA,QAAQ,CAACC,EAAE,KAAKN,IAAI,CAACM,EAAE,CAAC;IACrF,MAAMQ,WAAW,GAAG;MAAE,GAAGH,WAAW,CAACC,gBAAgB;IAAE,CAAC;IACxDE,WAAW,CAACb,QAAQ,IAAIS,MAAM;IAC9BI,WAAW,CAACb,QAAQ,IAAI,CAAC,GAAGU,WAAW,CAACI,MAAM,CAACH,gBAAgB,EAAE,CAAC,CAAC,GAAID,WAAW,CAACC,gBAAgB,CAAC,GAAGE,WAAY;IACnH5B,OAAO,CAACyB,WAAW,CAAC;IACpBrB,aAAa,CAACqB,WAAW,CAACb,MAAM,CAAC,CAACC,KAAK,EAAEC,IAAI,KAAKD,KAAK,GAAGC,IAAI,CAACC,QAAQ,EAAE,CAAC,CAAC,CAAC;EAChF,CAAC;EAGD,OAAO;IAAEC,eAAe;IAAEO,oBAAoB;IAAED,UAAU;IAAElB,aAAa;IAAEJ,OAAO;IAAED,IAAI;IAAEI,UAAU;IAAEF,WAAW;IAAEC;EAAe,CAAC;AACvI,CAAC;AAACJ,EAAA,CAhDID,OAAO;AAkDb,eAAeA,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}