{"ast":null,"code":"var _jsxFileName = \"/home/stv/Documents/Web/React/ecommerce/src/components/SideBar/Sidebar.js\",\n  _s = $RefreshSig$();\nimport \"./Sidebar.css\";\nimport { useState, useEffect } from 'react';\nimport categories from \"./sidebarCategories.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Sidebar(props) {\n  _s();\n  const {\n    onCategoryChange\n  } = props;\n  const [selectedCategories, setSelectedCategories] = useState([]);\n  const handleCheckboxChange = event => {\n    const checkboxValue = event.target.value;\n    let newSelectedCategories = [];\n    if (selectedCategories.includes(checkboxValue)) {\n      // If the checkbox value is already in the selected categories, remove it\n      newSelectedCategories = selectedCategories.filter(category => category !== checkboxValue);\n    } else {\n      // Otherwise, add the checkbox value to the selected categories\n      newSelectedCategories = [...selectedCategories, checkboxValue];\n    }\n\n    // Update the selected categories and call the callback function\n    setSelectedCategories(newSelectedCategories);\n    onCategoryChange(newSelectedCategories);\n  };\n  useEffect(() => {\n    // Parse the URL path to get any category parameters\n    const params = new URLSearchParams(window.location.search);\n    const categoryParam = params.get(\"category\");\n    if (categoryParam) {\n      console.log(\"Parameters detected!\");\n      // Split the category parameter into an array of category names\n      const categoryNames = categoryParam.split(\",\");\n\n      // Filter the categories array to find any categories with matching names\n      const matchingCategories = categories.filter(category => categoryNames.includes(category.name));\n\n      // Map the matching categories to their values and update the selected categories state\n      const selectedCategoryValues = matchingCategories.map(category => category.name);\n      setSelectedCategories(selectedCategoryValues);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sidebarContainer\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebarContent\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Categories\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: categories.map(category => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"categoryItem\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            value: category.name,\n            onChange: handleCheckboxChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: category.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 29\n          }, this)]\n        }, category.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n_s(Sidebar, \"Q4cuh5xq9SH0gjoW9/NTjbt4wng=\");\n_c = Sidebar;\nvar _c;\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"names":["useState","useEffect","categories","jsxDEV","_jsxDEV","Sidebar","props","_s","onCategoryChange","selectedCategories","setSelectedCategories","handleCheckboxChange","event","checkboxValue","target","value","newSelectedCategories","includes","filter","category","params","URLSearchParams","window","location","search","categoryParam","get","console","log","categoryNames","split","matchingCategories","name","selectedCategoryValues","map","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","label","id","_c","$RefreshReg$"],"sources":["/home/stv/Documents/Web/React/ecommerce/src/components/SideBar/Sidebar.js"],"sourcesContent":["import \"./Sidebar.css\"\nimport { useState,useEffect } from 'react';\nimport categories from \"./sidebarCategories.json\"\n\nexport default function Sidebar(props) {\n\n    const { onCategoryChange } = props;\n\n    const [selectedCategories, setSelectedCategories] = useState([]);\n\n    const handleCheckboxChange = (event) => {\n        const checkboxValue = event.target.value;\n        let newSelectedCategories = [];\n\n        if (selectedCategories.includes(checkboxValue)) {\n            // If the checkbox value is already in the selected categories, remove it\n            newSelectedCategories = selectedCategories.filter(\n                (category) => category !== checkboxValue\n            );\n        } else {\n            // Otherwise, add the checkbox value to the selected categories\n            newSelectedCategories = [...selectedCategories, checkboxValue];\n        }\n\n        // Update the selected categories and call the callback function\n        setSelectedCategories(newSelectedCategories);\n        onCategoryChange(newSelectedCategories);\n    };\n\n    useEffect(() => {\n        // Parse the URL path to get any category parameters\n        const params = new URLSearchParams(window.location.search);\n        const categoryParam = params.get(\"category\");\n\n        if (categoryParam) {\n            console.log(\"Parameters detected!\")\n            // Split the category parameter into an array of category names\n            const categoryNames = categoryParam.split(\",\");\n\n            // Filter the categories array to find any categories with matching names\n            const matchingCategories = categories.filter(category =>\n                categoryNames.includes(category.name)\n            );\n\n            // Map the matching categories to their values and update the selected categories state\n            const selectedCategoryValues = matchingCategories.map(category => category.name);\n            setSelectedCategories(selectedCategoryValues);\n        }\n    }, []);\n\n    return (\n        <div className=\"sidebarContainer\">\n\n            <div className=\"sidebarContent\">\n                <h2>Categories</h2>\n                <ul>\n                    {categories.map((category) => (\n                        <li className=\"categoryItem\" key={category.id}>\n                            <input type=\"checkbox\" value={category.name} onChange={handleCheckboxChange} />\n                            <p>{category.label}</p>\n                        </li>\n                    ))}\n\n\n\n\n\n                </ul>\n            </div>\n\n        </div>\n    )\n\n\n\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}