{"ast":null,"code":"var _jsxFileName = \"/home/stv/Documents/Web/React/ecommerce/src/components/Product/ProductList.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useContext } from 'react';\nimport './ProductList.css';\nimport Sidebar from '../SideBar/Sidebar';\nimport ProductCard from \"./ProductCard\";\nimport { MyContext } from '../MyContext.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ProductList(_ref) {\n  _s();\n  let {\n    handleAddToCart,\n    toggleSidebar,\n    showSidebar\n  } = _ref;\n  const {\n    selectedCategory,\n    setSelectedCategory\n  } = useContext(MyContext);\n\n  // fetch data\n  const [products, setProducts] = useState([]);\n  useEffect(() => {\n    async function fetchData() {\n      const response = await fetch('https://fakestoreapi.com/products');\n      const data = await response.json();\n      setProducts(data);\n    }\n    fetchData();\n  }, []);\n\n  // get only the data your want.\n  const filteredProducts = products.filter(product => {\n    return selectedCategory ? product.category === selectedCategory : true;\n  });\n  const handleCategoryChange = selectedCategory => {\n    setSelectedCategory(selectedCategory);\n  };\n\n  // render the component\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"productListContainer\",\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n      onCategoryChange: handleCategoryChange,\n      toggleSidebar: toggleSidebar,\n      showSidebar: showSidebar\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"productCardList\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"productListHeader\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Products\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"filterButton\",\n          onClick: toggleSidebar,\n          children: \"Filter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"productListContent\",\n        children: filteredProducts.map(product => /*#__PURE__*/_jsxDEV(ProductCard, {\n          handleAddToCart: handleAddToCart,\n          product: product\n        }, product.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 7\n  }, this);\n}\n\n//   With these changes, you should be able to filter the products by category using the Sidebar component, and the initial products list should also appear when the component first renders.\n_s(ProductList, \"4kd6D9lmGfafvReWh8QDGhVXGbE=\");\n_c = ProductList;\nvar _c;\n$RefreshReg$(_c, \"ProductList\");","map":{"version":3,"names":["useState","useEffect","useContext","Sidebar","ProductCard","MyContext","jsxDEV","_jsxDEV","ProductList","_ref","_s","handleAddToCart","toggleSidebar","showSidebar","selectedCategory","setSelectedCategory","products","setProducts","fetchData","response","fetch","data","json","filteredProducts","filter","product","category","handleCategoryChange","className","children","onCategoryChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","id","_c","$RefreshReg$"],"sources":["/home/stv/Documents/Web/React/ecommerce/src/components/Product/ProductList.js"],"sourcesContent":["import { useState, useEffect, useContext } from 'react';\n\nimport './ProductList.css'\nimport Sidebar from '../SideBar/Sidebar'\nimport ProductCard from \"./ProductCard\";\nimport { MyContext } from '../MyContext.js';\n\n\nexport default function ProductList({ handleAddToCart, toggleSidebar, showSidebar }) {\n    const { selectedCategory, setSelectedCategory } = useContext(MyContext);\n  \n    // fetch data\n    const [products, setProducts] = useState([]);\n  \n    useEffect(() => {\n      async function fetchData() {\n        const response = await fetch('https://fakestoreapi.com/products');\n        const data = await response.json();\n        setProducts(data);\n      }\n  \n      fetchData();\n    }, []);\n  \n    // get only the data your want.\n    const filteredProducts = products.filter(product => {\n      return selectedCategory ? product.category === selectedCategory : true;\n    });\n  \n    const handleCategoryChange = (selectedCategory) => {\n      setSelectedCategory(selectedCategory);\n    };\n  \n    // render the component\n    return (\n      <div className=\"productListContainer\">\n        <Sidebar onCategoryChange={handleCategoryChange} toggleSidebar={toggleSidebar} showSidebar={showSidebar} />\n        <div className=\"productCardList\">\n          <div className=\"productListHeader\">\n            <h2>Products</h2>\n            <button className=\"filterButton\" onClick={toggleSidebar}>\n              Filter\n            </button>\n          </div>\n          <div className=\"productListContent\">\n            {filteredProducts.map((product) => (\n              <ProductCard handleAddToCart={handleAddToCart} product={product} key={product.id} />\n            ))}\n          </div>\n        </div>\n      </div>\n    );\n  }\n  \n//   With these changes, you should be able to filter the products by category using the Sidebar component, and the initial products list should also appear when the component first renders.\n  "],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAEvD,OAAO,mBAAmB;AAC1B,OAAOC,OAAO,MAAM,oBAAoB;AACxC,OAAOC,WAAW,MAAM,eAAe;AACvC,SAASC,SAAS,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG5C,eAAe,SAASC,WAAWA,CAAAC,IAAA,EAAkD;EAAAC,EAAA;EAAA,IAAjD;IAAEC,eAAe;IAAEC,aAAa;IAAEC;EAAY,CAAC,GAAAJ,IAAA;EAC/E,MAAM;IAAEK,gBAAgB;IAAEC;EAAoB,CAAC,GAAGb,UAAU,CAACG,SAAS,CAAC;;EAEvE;EACA,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd,eAAeiB,SAASA,CAAA,EAAG;MACzB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmC,CAAC;MACjE,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;MAClCL,WAAW,CAACI,IAAI,CAAC;IACnB;IAEAH,SAAS,EAAE;EACb,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMK,gBAAgB,GAAGP,QAAQ,CAACQ,MAAM,CAACC,OAAO,IAAI;IAClD,OAAOX,gBAAgB,GAAGW,OAAO,CAACC,QAAQ,KAAKZ,gBAAgB,GAAG,IAAI;EACxE,CAAC,CAAC;EAEF,MAAMa,oBAAoB,GAAIb,gBAAgB,IAAK;IACjDC,mBAAmB,CAACD,gBAAgB,CAAC;EACvC,CAAC;;EAED;EACA,oBACEP,OAAA;IAAKqB,SAAS,EAAC,sBAAsB;IAAAC,QAAA,gBACnCtB,OAAA,CAACJ,OAAO;MAAC2B,gBAAgB,EAAEH,oBAAqB;MAACf,aAAa,EAAEA,aAAc;MAACC,WAAW,EAAEA;IAAY;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eAC3G3B,OAAA;MAAKqB,SAAS,EAAC,iBAAiB;MAAAC,QAAA,gBAC9BtB,OAAA;QAAKqB,SAAS,EAAC,mBAAmB;QAAAC,QAAA,gBAChCtB,OAAA;UAAAsB,QAAA,EAAI;QAAQ;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAK,eACjB3B,OAAA;UAAQqB,SAAS,EAAC,cAAc;UAACO,OAAO,EAAEvB,aAAc;UAAAiB,QAAA,EAAC;QAEzD;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAS;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACL,eACN3B,OAAA;QAAKqB,SAAS,EAAC,oBAAoB;QAAAC,QAAA,EAChCN,gBAAgB,CAACa,GAAG,CAAEX,OAAO,iBAC5BlB,OAAA,CAACH,WAAW;UAACO,eAAe,EAAEA,eAAgB;UAACc,OAAO,EAAEA;QAAQ,GAAMA,OAAO,CAACY,EAAE;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACjF;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACE;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACF;AAEV;;AAEF;AAAAxB,EAAA,CA9CwBF,WAAW;AAAA8B,EAAA,GAAX9B,WAAW;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}