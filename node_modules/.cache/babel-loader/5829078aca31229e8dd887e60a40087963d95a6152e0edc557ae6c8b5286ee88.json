{"ast":null,"code":"var _jsxFileName = \"/home/stv/Documents/Web/React/ecommerce/src/components/SideBar/Sidebar.js\",\n  _s = $RefreshSig$();\nimport \"./Sidebar.css\";\nimport { useState, useEffect } from 'react';\nimport categories from \"./sidebarCategories.json\";\nimport { useSearchParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Sidebar(props) {\n  _s();\n  const {\n    onCategoryChange\n  } = props;\n  const [selectedCategories, setSelectedCategories] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  // check for parameters.If exists then \n  useEffect(() => {\n    const queryParams = new URLSearchParams(window.location.search);\n    const categoryParam = queryParams.get('category');\n    if (categoryParam) {\n      setSelectedCategories([categoryParam]);\n      onCategoryChange([categoryParam]);\n\n      // Delete the \"category\" parameter\n      queryParams.delete(\"category\");\n\n      // Construct the new URL with the modified parameters\n      const newUrl = `${window.location.pathname}?${queryParams.toString()}`;\n\n      // Update the URL\n      window.history.pushState(null, '', newUrl);\n    }\n  }, []);\n  const handleCheckboxChange = event => {\n    const checkboxValue = event.target.value;\n    let newSelectedCategories = [];\n    if (selectedCategories.includes(checkboxValue)) {\n      // If the checkbox value is already in the selected categories, remove it\n      newSelectedCategories = selectedCategories.filter(category => category !== checkboxValue);\n    } else {\n      // Otherwise, add the checkbox value to the selected categories\n      newSelectedCategories = [...selectedCategories, checkboxValue];\n    }\n    console.log(newSelectedCategories);\n    // Update the selected categories and call the callback function\n    setSelectedCategories(newSelectedCategories);\n    onCategoryChange(newSelectedCategories);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sidebarContainer\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebarContent\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Categories\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: categories.map(category => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"categoryItem\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            value: category.name,\n            checked: selectedCategories.includes(category.name),\n            onChange: handleCheckboxChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: category.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 29\n          }, this)]\n        }, category.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n}\n_s(Sidebar, \"avtUstpRAdmMr/J9StWALReUqTM=\", false, function () {\n  return [useSearchParams];\n});\n_c = Sidebar;\nvar _c;\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"names":["useState","useEffect","categories","useSearchParams","jsxDEV","_jsxDEV","Sidebar","props","_s","onCategoryChange","selectedCategories","setSelectedCategories","searchParams","setSearchParams","queryParams","URLSearchParams","window","location","search","categoryParam","get","delete","newUrl","pathname","toString","history","pushState","handleCheckboxChange","event","checkboxValue","target","value","newSelectedCategories","includes","filter","category","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","type","name","checked","onChange","label","id","_c","$RefreshReg$"],"sources":["/home/stv/Documents/Web/React/ecommerce/src/components/SideBar/Sidebar.js"],"sourcesContent":["import \"./Sidebar.css\"\nimport { useState, useEffect } from 'react';\nimport categories from \"./sidebarCategories.json\"\nimport {useSearchParams} from 'react-router-dom';\n\nexport default function Sidebar(props) {\n\n    const { onCategoryChange } = props;\n    const [selectedCategories, setSelectedCategories] = useState([]);\n\n \n    const [searchParams, setSearchParams] = useSearchParams();\n\n\n    // check for parameters.If exists then \n    useEffect(() => {\n        const queryParams = new URLSearchParams(window.location.search);\n        const categoryParam = queryParams.get('category');\n        \n        if (categoryParam) {\n          setSelectedCategories([categoryParam]);\n          onCategoryChange([categoryParam]);\n      \n          // Delete the \"category\" parameter\n          queryParams.delete(\"category\");\n      \n          // Construct the new URL with the modified parameters\n          const newUrl = `${window.location.pathname}?${queryParams.toString()}`;\n      \n          // Update the URL\n          window.history.pushState(null, '', newUrl);\n        }\n      }, []);\n      \n    const handleCheckboxChange = (event) => {\n        const checkboxValue = event.target.value;\n        let newSelectedCategories = [];\n\n        if (selectedCategories.includes(checkboxValue)) {\n            // If the checkbox value is already in the selected categories, remove it\n            newSelectedCategories = selectedCategories.filter(\n                (category) => category !== checkboxValue\n            );\n        } else {\n            // Otherwise, add the checkbox value to the selected categories\n            newSelectedCategories = [...selectedCategories, checkboxValue];\n        }\n\n        console.log(newSelectedCategories);\n        // Update the selected categories and call the callback function\n        setSelectedCategories(newSelectedCategories);\n        onCategoryChange(newSelectedCategories);\n    };\n\n    return (\n        <div className=\"sidebarContainer\">\n\n            <div className=\"sidebarContent\">\n                <h2>Categories</h2>\n                <ul>\n                    {categories.map((category) => (\n                        <li className=\"categoryItem\" key={category.id}>\n                            <input type=\"checkbox\" value={category.name} checked={selectedCategories.includes(category.name)} onChange={handleCheckboxChange} />\n                            <p>{category.label}</p>\n                        </li>\n                    ))}\n                </ul>\n            </div>\n\n        </div>\n    )\n\n\n\n}"],"mappings":";;AAAA,OAAO,eAAe;AACtB,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,UAAU,MAAM,0BAA0B;AACjD,SAAQC,eAAe,QAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,eAAe,SAASC,OAAOA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAEnC,MAAM;IAAEC;EAAiB,CAAC,GAAGF,KAAK;EAClC,MAAM,CAACG,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAGhE,MAAM,CAACY,YAAY,EAAEC,eAAe,CAAC,GAAGV,eAAe,EAAE;;EAGzD;EACAF,SAAS,CAAC,MAAM;IACZ,MAAMa,WAAW,GAAG,IAAIC,eAAe,CAACC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC;IAC/D,MAAMC,aAAa,GAAGL,WAAW,CAACM,GAAG,CAAC,UAAU,CAAC;IAEjD,IAAID,aAAa,EAAE;MACjBR,qBAAqB,CAAC,CAACQ,aAAa,CAAC,CAAC;MACtCV,gBAAgB,CAAC,CAACU,aAAa,CAAC,CAAC;;MAEjC;MACAL,WAAW,CAACO,MAAM,CAAC,UAAU,CAAC;;MAE9B;MACA,MAAMC,MAAM,GAAI,GAAEN,MAAM,CAACC,QAAQ,CAACM,QAAS,IAAGT,WAAW,CAACU,QAAQ,EAAG,EAAC;;MAEtE;MACAR,MAAM,CAACS,OAAO,CAACC,SAAS,CAAC,IAAI,EAAE,EAAE,EAAEJ,MAAM,CAAC;IAC5C;EACF,CAAC,EAAE,EAAE,CAAC;EAER,MAAMK,oBAAoB,GAAIC,KAAK,IAAK;IACpC,MAAMC,aAAa,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK;IACxC,IAAIC,qBAAqB,GAAG,EAAE;IAE9B,IAAItB,kBAAkB,CAACuB,QAAQ,CAACJ,aAAa,CAAC,EAAE;MAC5C;MACAG,qBAAqB,GAAGtB,kBAAkB,CAACwB,MAAM,CAC5CC,QAAQ,IAAKA,QAAQ,KAAKN,aAAa,CAC3C;IACL,CAAC,MAAM;MACH;MACAG,qBAAqB,GAAG,CAAC,GAAGtB,kBAAkB,EAAEmB,aAAa,CAAC;IAClE;IAEAO,OAAO,CAACC,GAAG,CAACL,qBAAqB,CAAC;IAClC;IACArB,qBAAqB,CAACqB,qBAAqB,CAAC;IAC5CvB,gBAAgB,CAACuB,qBAAqB,CAAC;EAC3C,CAAC;EAED,oBACI3B,OAAA;IAAKiC,SAAS,EAAC,kBAAkB;IAAAC,QAAA,eAE7BlC,OAAA;MAAKiC,SAAS,EAAC,gBAAgB;MAAAC,QAAA,gBAC3BlC,OAAA;QAAAkC,QAAA,EAAI;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,eACnBtC,OAAA;QAAAkC,QAAA,EACKrC,UAAU,CAAC0C,GAAG,CAAET,QAAQ,iBACrB9B,OAAA;UAAIiC,SAAS,EAAC,cAAc;UAAAC,QAAA,gBACxBlC,OAAA;YAAOwC,IAAI,EAAC,UAAU;YAACd,KAAK,EAAEI,QAAQ,CAACW,IAAK;YAACC,OAAO,EAAErC,kBAAkB,CAACuB,QAAQ,CAACE,QAAQ,CAACW,IAAI,CAAE;YAACE,QAAQ,EAAErB;UAAqB;YAAAa,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAG,eACpItC,OAAA;YAAAkC,QAAA,EAAIJ,QAAQ,CAACc;UAAK;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAK;QAAA,GAFOR,QAAQ,CAACe,EAAE;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAIhD;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACD;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACH;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAEJ;AAKd;AAACnC,EAAA,CArEuBF,OAAO;EAAA,QAMaH,eAAe;AAAA;AAAAgD,EAAA,GANnC7C,OAAO;AAAA,IAAA6C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}