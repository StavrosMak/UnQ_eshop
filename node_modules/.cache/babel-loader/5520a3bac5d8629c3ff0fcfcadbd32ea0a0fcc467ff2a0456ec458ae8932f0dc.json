{"ast":null,"code":"import \"./Sidebar.css\";\nimport { useState } from 'react';\nimport categories from \"./sidebarCategories.json\";\n\n// export default function Sidebar(props) {\n\n//     const { onCategoryChange } = props;\n\n//     const [selectedCategories, setSelectedCategories] = useState([]);\n\n//     const handleCheckboxChange = (event) => {\n//         const checkboxValue = event.target.value;\n//         let newSelectedCategories = [];\n\n//         if (selectedCategories.includes(checkboxValue)) {\n//             // If the checkbox value is already in the selected categories, remove it\n//             newSelectedCategories = selectedCategories.filter(\n//                 (category) => category !== checkboxValue\n//             );\n//         } else {\n//             // Otherwise, add the checkbox value to the selected categories\n//             newSelectedCategories = [...selectedCategories, checkboxValue];\n//         }\n\n//         // Update the selected categories and call the callback function\n//         setSelectedCategories(newSelectedCategories);\n//         onCategoryChange(newSelectedCategories);\n//     };\n\n//     return (\n//         <div className=\"sidebarContainer\">\n\n//             <div className=\"sidebarContent\">\n//                 <h2>Categories</h2>\n//                 <ul>\n//                     {categories.map((category) => (\n//                         <li className=\"categoryItem\" key={category.id}>\n//                             <input type=\"checkbox\" value={category.name} onChange={handleCheckboxChange} />\n//                             <p>{category.label}</p>\n//                         </li>\n//                     ))}\n\n//                 </ul>\n//             </div>\n\n//         </div>\n//     )\n\n// }","map":{"version":3,"names":["useState","categories"],"sources":["/home/stv/Documents/Web/React/ecommerce/src/components/SideBar/Sidebar.js"],"sourcesContent":["import \"./Sidebar.css\"\nimport { useState } from 'react';\nimport categories from \"./sidebarCategories.json\"\n\n\n// export default function Sidebar(props) {\n\n//     const { onCategoryChange } = props;\n\n//     const [selectedCategories, setSelectedCategories] = useState([]);\n\n//     const handleCheckboxChange = (event) => {\n//         const checkboxValue = event.target.value;\n//         let newSelectedCategories = [];\n\n//         if (selectedCategories.includes(checkboxValue)) {\n//             // If the checkbox value is already in the selected categories, remove it\n//             newSelectedCategories = selectedCategories.filter(\n//                 (category) => category !== checkboxValue\n//             );\n//         } else {\n//             // Otherwise, add the checkbox value to the selected categories\n//             newSelectedCategories = [...selectedCategories, checkboxValue];\n//         }\n\n//         // Update the selected categories and call the callback function\n//         setSelectedCategories(newSelectedCategories);\n//         onCategoryChange(newSelectedCategories);\n//     };\n\n//     return (\n//         <div className=\"sidebarContainer\">\n\n//             <div className=\"sidebarContent\">\n//                 <h2>Categories</h2>\n//                 <ul>\n//                     {categories.map((category) => (\n//                         <li className=\"categoryItem\" key={category.id}>\n//                             <input type=\"checkbox\" value={category.name} onChange={handleCheckboxChange} />\n//                             <p>{category.label}</p>\n//                         </li>\n//                     ))}\n\n\n\n\n\n//                 </ul>\n//             </div>\n\n//         </div>\n//     )\n\n\n\n// }"],"mappings":"AAAA,OAAO,eAAe;AACtB,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,UAAU,MAAM,0BAA0B;;AAGjD;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAMA;AACA;;AAEA;AACA;;AAIA"},"metadata":{},"sourceType":"module","externalDependencies":[]}