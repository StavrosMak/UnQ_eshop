{"ast":null,"code":"var _jsxFileName = \"/home/stv/Documents/Web/React/ecommerce/src/components/SideBar/Sidebar.js\",\n  _s = $RefreshSig$();\nimport \"./Sidebar.css\";\nimport { useState, useEffect } from 'react';\nimport categories from \"./sidebarCategories.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Sidebar(props) {\n  _s();\n  const [selectedCategories, setSelectedCategories] = useState([]); //selectedCategories used to check the sidebar checkboxes.\n  const {\n    onCategoryChange,\n    toggleSidebar,\n    showSidebar\n  } = props; //destructuring assignment  \n  useEffect(() => {\n    const queryParams = new URLSearchParams(window.location.search);\n    const categoryParam = queryParams.get('category');\n    if (categoryParam) {\n      //when i have parameters.\n      // use the parameters.\n      setSelectedCategories([categoryParam]);\n      onCategoryChange([categoryParam]); //to pass the categoryChange back to productList\n    }\n  }, [window.location.search]);\n  const handleCheckboxChange = (event, selectedCategory) => {\n    const checkboxValue = event.target.value;\n    let newSelectedCategories;\n    if (selectedCategory) {\n      newSelectedCategories = [selectedCategory];\n    } else {\n      newSelectedCategories = selectedCategories.includes(checkboxValue) ? selectedCategories.filter(category => category !== checkboxValue) : [...selectedCategories, checkboxValue];\n    }\n\n    // Update the selected categories and call the callback function\n    setSelectedCategories(newSelectedCategories);\n    onCategoryChange(newSelectedCategories);\n\n    // Construct the new URL with the modified parameters\n    const queryParams = new URLSearchParams(window.location.search);\n    queryParams.set(\"category\", newSelectedCategories.join(\",\"));\n    const newUrl = `${window.location.pathname}?${queryParams.toString()}`;\n\n    // Update the URL\n    window.history.pushState(null, '', newUrl);\n  };\n\n  // const handleCheckboxChange = (event) => {\n\n  //     const checkboxValue = event.target.value;\n  //     const newSelectedCategories = selectedCategories.includes(checkboxValue)\n  //         ? selectedCategories.filter(category => category !== checkboxValue)\n  //         : [...selectedCategories, checkboxValue];\n\n  //     // Update the selected categories and call the callback function\n  //     setSelectedCategories(newSelectedCategories);\n  //     onCategoryChange(newSelectedCategories);\n\n  //     // Construct the new URL with the modified parameters\n  //     const queryParams = new URLSearchParams(window.location.search);\n  //     queryParams.set(\"category\", newSelectedCategories.join(\",\"));\n  //     const newUrl = `${window.location.pathname}?${queryParams.toString()}`;\n\n  //     // Update the URL\n  //     window.history.pushState(null, '', newUrl);\n  // };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `sidebarContainer ${showSidebar ? 'active' : ''}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebarContent\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Categories\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [categories.map(category => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"categoryItem\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            \"aria-label\": \"sidebar-Checkbox\",\n            type: \"checkbox\",\n            value: category.name,\n            checked: selectedCategories.includes(category.name),\n            onChange: handleCheckboxChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: category.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 29\n          }, this)]\n        }, category.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 25\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"saveBtn\",\n          onClick: toggleSidebar,\n          children: \"Save & Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n}\n_s(Sidebar, \"Q4cuh5xq9SH0gjoW9/NTjbt4wng=\");\n_c = Sidebar;\nvar _c;\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"names":["useState","useEffect","categories","jsxDEV","_jsxDEV","Sidebar","props","_s","selectedCategories","setSelectedCategories","onCategoryChange","toggleSidebar","showSidebar","queryParams","URLSearchParams","window","location","search","categoryParam","get","handleCheckboxChange","event","selectedCategory","checkboxValue","target","value","newSelectedCategories","includes","filter","category","set","join","newUrl","pathname","toString","history","pushState","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","type","name","checked","onChange","label","id","onClick","_c","$RefreshReg$"],"sources":["/home/stv/Documents/Web/React/ecommerce/src/components/SideBar/Sidebar.js"],"sourcesContent":["import \"./Sidebar.css\"\nimport { useState, useEffect } from 'react';\nimport categories from \"./sidebarCategories.json\"\n\nexport default function Sidebar(props) {\n\n    const [selectedCategories, setSelectedCategories] = useState([]); //selectedCategories used to check the sidebar checkboxes.\n    const { onCategoryChange, toggleSidebar, showSidebar } = props;//destructuring assignment  \n    useEffect(() => {\n        \n        const queryParams = new URLSearchParams(window.location.search);\n        const categoryParam = queryParams.get('category');\n        if (categoryParam) { //when i have parameters.\n            // use the parameters.\n            setSelectedCategories([categoryParam]);\n            onCategoryChange([categoryParam]); //to pass the categoryChange back to productList\n        }\n    }, [window.location.search]);\n\n    const handleCheckboxChange = (event, selectedCategory) => {\n        const checkboxValue = event.target.value;\n        let newSelectedCategories;\n    \n        if (selectedCategory) {\n            newSelectedCategories = [selectedCategory];\n        } else {\n            newSelectedCategories = selectedCategories.includes(checkboxValue)\n                ? selectedCategories.filter(category => category !== checkboxValue)\n                : [...selectedCategories, checkboxValue];\n        }\n    \n        // Update the selected categories and call the callback function\n        setSelectedCategories(newSelectedCategories);\n        onCategoryChange(newSelectedCategories);\n    \n        // Construct the new URL with the modified parameters\n        const queryParams = new URLSearchParams(window.location.search);\n        queryParams.set(\"category\", newSelectedCategories.join(\",\"));\n        const newUrl = `${window.location.pathname}?${queryParams.toString()}`;\n    \n        // Update the URL\n        window.history.pushState(null, '', newUrl);\n    };\n    \n\n    // const handleCheckboxChange = (event) => {\n\n    //     const checkboxValue = event.target.value;\n    //     const newSelectedCategories = selectedCategories.includes(checkboxValue)\n    //         ? selectedCategories.filter(category => category !== checkboxValue)\n    //         : [...selectedCategories, checkboxValue];\n\n    //     // Update the selected categories and call the callback function\n    //     setSelectedCategories(newSelectedCategories);\n    //     onCategoryChange(newSelectedCategories);\n\n    //     // Construct the new URL with the modified parameters\n    //     const queryParams = new URLSearchParams(window.location.search);\n    //     queryParams.set(\"category\", newSelectedCategories.join(\",\"));\n    //     const newUrl = `${window.location.pathname}?${queryParams.toString()}`;\n\n    //     // Update the URL\n    //     window.history.pushState(null, '', newUrl);\n    // };\n\n    return (\n        <div className={`sidebarContainer ${showSidebar ? 'active' : ''}`}>\n            <div className=\"sidebarContent\">\n                <h2>Categories</h2>\n                <ul>\n                    {categories.map((category) => (\n                        <li className=\"categoryItem\" key={category.id}>\n                            <input aria-label=\"sidebar-Checkbox\" type=\"checkbox\" value={category.name}\n                                checked={selectedCategories.includes(category.name)}\n                                onChange={handleCheckboxChange}\n                            />\n                            <p>{category.label}</p>\n                        </li>\n                    ))}\n                    <button className=\"saveBtn\" onClick={toggleSidebar}>Save & Search</button>\n                </ul>\n            </div>\n        </div>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}