{"ast":null,"code":"var _jsxFileName = \"/home/stv/Documents/Web/React/ecommerce/src/CustomHooks/useCart.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [cart, setCart] = useState([]);\n  const [cartVisible, setCartVisible] = useState(false);\n  const [cartLength, setCartLength] = useState(0);\n  useEffect(() => {\n    const initialCart = JSON.parse(localStorage.getItem('cart')) || [];\n    setCart(initialCart);\n  }, []);\n  useEffect(() => {\n    localStorage.setItem('cart', JSON.stringify(cart));\n    setCartLength(cart.reduce((total, item) => total + item.quantity, 0));\n  }, [cart]);\n  const handleAddToCart = item => {\n    const existingItem = cart.find(cartItem => cartItem.id === item.id);\n    if (existingItem) {\n      setCart(cart.map(cartItem => cartItem.id === item.id ? {\n        ...cartItem,\n        quantity: cartItem.quantity + 1\n      } : cartItem));\n    } else {\n      setCart([...cart, {\n        ...item,\n        quantity: 1\n      }]);\n    }\n  };\n  const toggleCart = () => {\n    setCartVisible(!cartVisible);\n  };\n  const handleQuantityChange = (item, change) => {\n    const updatedCart = [...cart];\n    const updatedItemIndex = updatedCart.findIndex(cartItem => cartItem.id === item.id);\n    const updatedItem = {\n      ...updatedCart[updatedItemIndex]\n    };\n    updatedItem.quantity += change;\n    if (updatedItem.quantity <= 0) {\n      updatedCart.splice(updatedItemIndex, 1);\n    } else {\n      updatedCart[updatedItemIndex] = updatedItem;\n    }\n    setCart(updatedCart);\n    setCartLength(updatedCart.reduce((total, item) => total + item.quantity, 0));\n  };\n  const value = {\n    handleAddToCart,\n    handleQuantityChange,\n    toggleCart,\n    setCartLength,\n    setCart,\n    cart,\n    cartLength,\n    cartVisible,\n    setCartVisible\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 12\n  }, this);\n};\n_s(CartProvider, \"OM6vXvCEuYwae3OWdv2lhqG87b8=\");\n_c = CartProvider;\nexport default {\n  CartProvider\n};\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","CartProvider","_ref","_s","children","cart","setCart","cartVisible","setCartVisible","cartLength","setCartLength","initialCart","JSON","parse","localStorage","getItem","setItem","stringify","reduce","total","item","quantity","handleAddToCart","existingItem","find","cartItem","id","map","toggleCart","handleQuantityChange","change","updatedCart","updatedItemIndex","findIndex","updatedItem","splice","value","CartContext","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/stv/Documents/Web/React/ecommerce/src/CustomHooks/useCart.js"],"sourcesContent":["import React, {useState, useEffect } from 'react'\n\nconst CartProvider = ({ children }) => {\n    const [cart, setCart] = useState([]);\n    const [cartVisible, setCartVisible] = useState(false);\n    const [cartLength, setCartLength] = useState(0);\n  \n    useEffect(() => {\n      const initialCart = JSON.parse(localStorage.getItem('cart')) || [];\n      setCart(initialCart);\n    }, []);\n  \n    useEffect(() => {\n      localStorage.setItem('cart', JSON.stringify(cart));\n      setCartLength(cart.reduce((total, item) => total + item.quantity, 0));\n    }, [cart]);\n  \n    const handleAddToCart = (item) => {\n      const existingItem = cart.find((cartItem) => cartItem.id === item.id);\n  \n      if (existingItem) {\n        setCart(cart.map((cartItem) => (cartItem.id === item.id ? { ...cartItem, quantity: cartItem.quantity + 1 } : cartItem)));\n      } else {\n        setCart([...cart, { ...item, quantity: 1 }]);\n      }\n    };\n  \n    const toggleCart = () => {\n      setCartVisible(!cartVisible);\n    };\n  \n    const handleQuantityChange = (item, change) => {\n      const updatedCart = [...cart];\n      const updatedItemIndex = updatedCart.findIndex((cartItem) => cartItem.id === item.id);\n      const updatedItem = { ...updatedCart[updatedItemIndex] };\n      updatedItem.quantity += change;\n  \n      if (updatedItem.quantity <= 0) {\n        updatedCart.splice(updatedItemIndex, 1);\n      } else {\n        updatedCart[updatedItemIndex] = updatedItem;\n      }\n  \n      setCart(updatedCart);\n      setCartLength(updatedCart.reduce((total, item) => total + item.quantity, 0));\n    };\n  \n    const value = {\n      handleAddToCart,\n      handleQuantityChange,\n      toggleCart,\n      setCartLength,\n      setCart,\n      cart,\n      cartLength,\n      cartVisible,\n      setCartVisible,\n    };\n  \n    return <CartContext.Provider value={value}>{children}</CartContext.Provider>;\n  };\n  export default { CartProvider };\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}