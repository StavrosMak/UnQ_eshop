{"ast":null,"code":"var _jsxFileName = \"/home/stv/Documents/Web/React/ecommerce/src/components/SideBar/Sidebar.js\",\n  _s = $RefreshSig$();\nimport \"./Sidebar.css\";\nimport { useState, useEffect } from 'react';\nimport categories from \"./sidebarCategories.json\";\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Sidebar(props) {\n  _s();\n  const {\n    onCategoryChange\n  } = props;\n  const [selectedCategories, setSelectedCategories] = useState([]);\n  const history = useHistory();\n  useEffect(() => {\n    const queryParams = new URLSearchParams(window.location.search);\n    const categoryParam = queryParams.get('category');\n    if (categoryParam) {\n      setSelectedCategories([categoryParam]);\n      onCategoryChange([categoryParam]);\n    }\n  }, [onCategoryChange]);\n  const handleCheckboxChange = event => {\n    const checkboxValue = event.target.value;\n    let newSelectedCategories = [];\n    if (selectedCategories.includes(checkboxValue)) {\n      newSelectedCategories = selectedCategories.filter(category => category !== checkboxValue);\n      if (newSelectedCategories.length === 0) {\n        // If no categories are selected, remove the category parameter from the URL\n        history.replace('/');\n      } else {\n        // If some categories are still selected, update the URL with the selected categories\n        const queryParams = new URLSearchParams();\n        newSelectedCategories.forEach(category => {\n          queryParams.append('category', category);\n        });\n        history.replace({\n          search: '?' + queryParams.toString()\n        });\n      }\n    } else {\n      newSelectedCategories = [...selectedCategories, checkboxValue];\n      const queryParams = new URLSearchParams();\n      newSelectedCategories.forEach(category => {\n        queryParams.append('category', category);\n      });\n      history.replace({\n        search: '?' + queryParams.toString()\n      });\n    }\n    setSelectedCategories(newSelectedCategories);\n    onCategoryChange(newSelectedCategories);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sidebarContainer\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebarContent\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Categories\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: categories.map(category => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"categoryItem\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            value: category.name,\n            checked: selectedCategories.includes(category.name),\n            onChange: handleCheckboxChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: category.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 29\n          }, this)]\n        }, category.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n}\n_s(Sidebar, \"repYdpPIMNvnXcmQ3tzC5igIYa0=\", false, function () {\n  return [useHistory];\n});\n_c = Sidebar;\nvar _c;\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"names":["useState","useEffect","categories","useHistory","jsxDEV","_jsxDEV","Sidebar","props","_s","onCategoryChange","selectedCategories","setSelectedCategories","history","queryParams","URLSearchParams","window","location","search","categoryParam","get","handleCheckboxChange","event","checkboxValue","target","value","newSelectedCategories","includes","filter","category","length","replace","forEach","append","toString","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","type","name","checked","onChange","label","id","_c","$RefreshReg$"],"sources":["/home/stv/Documents/Web/React/ecommerce/src/components/SideBar/Sidebar.js"],"sourcesContent":["import \"./Sidebar.css\"\nimport { useState, useEffect } from 'react';\nimport categories from \"./sidebarCategories.json\";\nimport { useHistory } from 'react-router-dom';\n\nexport default function Sidebar(props) {\n\n    const { onCategoryChange } = props;\n    const [selectedCategories, setSelectedCategories] = useState([]);\n    const history = useHistory();\n\n    useEffect(() => {\n        const queryParams = new URLSearchParams(window.location.search);\n        const categoryParam = queryParams.get('category');\n        if (categoryParam) {\n            setSelectedCategories([categoryParam]);\n            onCategoryChange([categoryParam]);\n        }\n    }, [onCategoryChange]);\n\n    const handleCheckboxChange = (event) => {\n        const checkboxValue = event.target.value;\n        let newSelectedCategories = [];\n\n        if (selectedCategories.includes(checkboxValue)) {\n            newSelectedCategories = selectedCategories.filter(\n                (category) => category !== checkboxValue\n            );\n            if (newSelectedCategories.length === 0) {\n                // If no categories are selected, remove the category parameter from the URL\n                history.replace('/');\n            } else {\n                // If some categories are still selected, update the URL with the selected categories\n                const queryParams = new URLSearchParams();\n                newSelectedCategories.forEach(category => {\n                    queryParams.append('category', category);\n                });\n                history.replace({ search: '?' + queryParams.toString() });\n            }\n        } else {\n            newSelectedCategories = [...selectedCategories, checkboxValue];\n            const queryParams = new URLSearchParams();\n            newSelectedCategories.forEach(category => {\n                queryParams.append('category', category);\n            });\n            history.replace({ search: '?' + queryParams.toString() });\n        }\n\n        setSelectedCategories(newSelectedCategories);\n        onCategoryChange(newSelectedCategories);\n    };\n\n    return (\n        <div className=\"sidebarContainer\">\n\n            <div className=\"sidebarContent\">\n                <h2>Categories</h2>\n                <ul>\n                    {categories.map((category) => (\n                        <li className=\"categoryItem\" key={category.id}>\n                            <input type=\"checkbox\" value={category.name} checked={selectedCategories.includes(category.name)} onChange={handleCheckboxChange} />\n                            <p>{category.label}</p>\n                        </li>\n                    ))}\n                </ul>\n            </div>\n\n        </div>\n    )\n\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}