{"ast":null,"code":"var _jsxFileName = \"/home/stv/Documents/Web/React/ecommerce/src/components/SideBar/Sidebar.js\",\n  _s = $RefreshSig$();\nimport \"./Sidebar.css\";\nimport { useState, useEffect } from 'react';\nimport categories from \"./sidebarCategories.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Sidebar(props) {\n  _s();\n  //props is a callback function. - The data goes back to parent and then pass it into other component.\n\n  const {\n    onCategoryChange,\n    toggleSidebar,\n    showSidebar\n  } = props; //destructuring assignment - extracting the onCategoryChange function\n  const [selectedCategories, setSelectedCategories] = useState([]);\n\n  // // check for parameters.If exists,then use them.\n  // useEffect(() => {\n  //     const queryParams = new URLSearchParams(window.location.search);\n  //     const categoryParam = queryParams.get('category');\n  //     if (categoryParam) {\n\n  //         // use the parameters.\n  //         setSelectedCategories([categoryParam]);\n  //         onCategoryChange([categoryParam]);\n\n  //         // THEN remove them...I dont want the user be able to check them.\n  //         // Delete the \"category\" parameter\n  //         queryParams.delete(\"category\");\n\n  //         // Construct the new URL with the modified parameters\n  //         const newUrl = `${window.location.pathname}?${queryParams.toString()}`;\n\n  //         // Update the URL\n  //         window.history.pushState(null, '', newUrl);\n  //     }\n  //     else {\n  //         //display them all\n  //         const allCategories = categories.map((category) => category.name);\n  //         setSelectedCategories(allCategories);\n  //         onCategoryChange(allCategories);\n  //     }\n  // }, []);\n\n  // // Every time you choose a category then display the products of this category.\n  // const handleCheckboxChange = (event) => {\n  //     const checkboxValue = event.target.value;\n  //     let newSelectedCategories = [];\n\n  //     if (selectedCategories.includes(checkboxValue)) {\n  //         // If the checkbox value is already in the selected categories, remove it\n  //         newSelectedCategories = selectedCategories.filter(\n  //             (category) => category !== checkboxValue\n  //         );\n  //     } else {\n  //         // Otherwise, add the checkbox value to the selected categories\n  //         newSelectedCategories = [...selectedCategories, checkboxValue];\n  //     }\n  //     // Update the selected categories and call the callback function\n  //     setSelectedCategories(newSelectedCategories);\n  //     onCategoryChange(newSelectedCategories);\n  // };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `sidebarContainer ${showSidebar ? 'active' : ''}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebarContent\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Categories\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [categories.map(category => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"categoryItem\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            value: category.name,\n            checked: selectedCategories.includes(category.name) //determine whether the checkbox should be checked or unchecked. - this if returns true or undefined(default state)\n            ,\n            onChange: handleCheckboxChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: category.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 29\n          }, this)]\n        }, category.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"saveBtn\",\n          onClick: toggleSidebar,\n          children: \"Save & Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n}\n_s(Sidebar, \"KmS+J5COdyZ7xuNCrRYNHKInTu4=\");\n_c = Sidebar;\nvar _c;\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"names":["useState","useEffect","categories","jsxDEV","_jsxDEV","Sidebar","props","_s","onCategoryChange","toggleSidebar","showSidebar","selectedCategories","setSelectedCategories","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","category","type","value","name","checked","includes","onChange","handleCheckboxChange","label","id","onClick","_c","$RefreshReg$"],"sources":["/home/stv/Documents/Web/React/ecommerce/src/components/SideBar/Sidebar.js"],"sourcesContent":["import \"./Sidebar.css\"\nimport { useState, useEffect } from 'react';\nimport categories from \"./sidebarCategories.json\"\n\nexport default function Sidebar(props) { //props is a callback function. - The data goes back to parent and then pass it into other component.\n\n\n    const { onCategoryChange,toggleSidebar, showSidebar } = props;//destructuring assignment - extracting the onCategoryChange function\n    const [selectedCategories, setSelectedCategories] = useState([]);\n\n\n\n    // // check for parameters.If exists,then use them.\n    // useEffect(() => {\n    //     const queryParams = new URLSearchParams(window.location.search);\n    //     const categoryParam = queryParams.get('category');\n    //     if (categoryParam) {\n\n    //         // use the parameters.\n    //         setSelectedCategories([categoryParam]);\n    //         onCategoryChange([categoryParam]);\n\n    //         // THEN remove them...I dont want the user be able to check them.\n    //         // Delete the \"category\" parameter\n    //         queryParams.delete(\"category\");\n\n    //         // Construct the new URL with the modified parameters\n    //         const newUrl = `${window.location.pathname}?${queryParams.toString()}`;\n\n    //         // Update the URL\n    //         window.history.pushState(null, '', newUrl);\n    //     }\n    //     else {\n    //         //display them all\n    //         const allCategories = categories.map((category) => category.name);\n    //         setSelectedCategories(allCategories);\n    //         onCategoryChange(allCategories);\n    //     }\n    // }, []);\n\n    // // Every time you choose a category then display the products of this category.\n    // const handleCheckboxChange = (event) => {\n    //     const checkboxValue = event.target.value;\n    //     let newSelectedCategories = [];\n\n    //     if (selectedCategories.includes(checkboxValue)) {\n    //         // If the checkbox value is already in the selected categories, remove it\n    //         newSelectedCategories = selectedCategories.filter(\n    //             (category) => category !== checkboxValue\n    //         );\n    //     } else {\n    //         // Otherwise, add the checkbox value to the selected categories\n    //         newSelectedCategories = [...selectedCategories, checkboxValue];\n    //     }\n    //     // Update the selected categories and call the callback function\n    //     setSelectedCategories(newSelectedCategories);\n    //     onCategoryChange(newSelectedCategories);\n    // };\n    return (\n        <div className={`sidebarContainer ${showSidebar ? 'active' : ''}`}>\n            <div className=\"sidebarContent\">\n\n                <h2>Categories</h2>\n                <ul>\n                    {categories.map((category) => (\n                        <li className=\"categoryItem\" key={category.id}>\n\n                            <input type=\"checkbox\" value={category.name}\n                                checked={selectedCategories.includes(category.name)} //determine whether the checkbox should be checked or unchecked. - this if returns true or undefined(default state)\n                                onChange={handleCheckboxChange}\n                            />\n                            <p>{category.label}</p>\n                        </li>\n                    ))}\n                    <button className=\"saveBtn\" onClick={toggleSidebar}>Save & Search</button>\n\n                </ul>\n            </div>\n\n        </div>\n    )\n\n\n\n}"],"mappings":";;AAAA,OAAO,eAAe;AACtB,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,UAAU,MAAM,0BAA0B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEjD,eAAe,SAASC,OAAOA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAAE;;EAGrC,MAAM;IAAEC,gBAAgB;IAACC,aAAa;IAAEC;EAAY,CAAC,GAAGJ,KAAK,CAAC;EAC9D,MAAM,CAACK,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;;EAIhE;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,oBACII,OAAA;IAAKS,SAAS,EAAG,oBAAmBH,WAAW,GAAG,QAAQ,GAAG,EAAG,EAAE;IAAAI,QAAA,eAC9DV,OAAA;MAAKS,SAAS,EAAC,gBAAgB;MAAAC,QAAA,gBAE3BV,OAAA;QAAAU,QAAA,EAAI;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,eACnBd,OAAA;QAAAU,QAAA,GACKZ,UAAU,CAACiB,GAAG,CAAEC,QAAQ,iBACrBhB,OAAA;UAAIS,SAAS,EAAC,cAAc;UAAAC,QAAA,gBAExBV,OAAA;YAAOiB,IAAI,EAAC,UAAU;YAACC,KAAK,EAAEF,QAAQ,CAACG,IAAK;YACxCC,OAAO,EAAEb,kBAAkB,CAACc,QAAQ,CAACL,QAAQ,CAACG,IAAI,CAAE,CAAC;YAAA;YACrDG,QAAQ,EAAEC;UAAqB;YAAAZ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QACjC,eACFd,OAAA;YAAAU,QAAA,EAAIM,QAAQ,CAACQ;UAAK;YAAAb,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAK;QAAA,GANOE,QAAQ,CAACS,EAAE;UAAAd,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAQhD,CAAC,eACFd,OAAA;UAAQS,SAAS,EAAC,SAAS;UAACiB,OAAO,EAAErB,aAAc;UAAAK,QAAA,EAAC;QAAa;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAS;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAEzE;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACH;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAEJ;AAKd;AAACX,EAAA,CAhFuBF,OAAO;AAAA0B,EAAA,GAAP1B,OAAO;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}