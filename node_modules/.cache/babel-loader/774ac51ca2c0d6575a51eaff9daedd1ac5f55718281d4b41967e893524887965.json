{"ast":null,"code":"// import \"./Sidebar.css\"\n// import { useState, useEffect } from 'react';\n// import categories from \"./sidebarCategories.json\"\n\n// export default function Sidebar(props) {\n//     const { onCategoryChange, toggleSidebar, showSidebar } = props;\n//     const [selectedCategories, setSelectedCategories] = useState([]);\n\n//     const handleCheckboxChange = (event) => {\n//       const checkboxValue = event.target.value;\n//       let newSelectedCategories = [];\n//       if (selectedCategories.includes(checkboxValue)) {\n//         newSelectedCategories = selectedCategories.filter(\n//           (category) => category !== checkboxValue\n//         );\n//       } else {\n//         newSelectedCategories = [...selectedCategories, checkboxValue];\n//       }\n//       setSelectedCategories(newSelectedCategories);\n//       onCategoryChange(newSelectedCategories);\n\n//       // Construct the new URL with the modified parameters\n//       const queryParams = new URLSearchParams(window.location.search);\n//       queryParams.set(\"category\", newSelectedCategories.join(\",\"));\n//       const newUrl = `${window.location.pathname}?${queryParams.toString()}`;\n\n//       // Update the URL\n//       window.history.pushState(null, '', newUrl);\n//     };\n\n//     // Parse the category parameter from the URL on component mount\n//     useEffect(() => {\n//       const queryParams = new URLSearchParams(window.location.search);\n//       const categoryParam = queryParams.get(\"category\");\n//       if (categoryParam) {\n//         setSelectedCategories(categoryParam.split(\",\"));\n//       }\n//     }, []);\n\n//     return (\n//       <div className={`sidebarContainer ${showSidebar ? 'active' : ''}`}>\n//         <div className=\"sidebarContent\">\n//           <h2>Categories</h2>\n//           <ul>\n//             {categories.map((category) => (\n//               <li className=\"categoryItem\" key={category.id}>\n//                 <input\n//                   type=\"checkbox\"\n//                   value={category.name}\n//                   checked={selectedCategories.includes(category.name)}\n//                   onChange={handleCheckboxChange}\n//                 />\n//                 <p>{category.label}</p>\n//               </li>\n//             ))}\n//           </ul>\n//           <button className=\"saveBtn\" onClick={toggleSidebar}>\n//             Save &amp; Search\n//           </button>\n//         </div>\n//       </div>\n//     );\n//   }","map":{"version":3,"names":[],"sources":["/home/stv/Documents/Web/React/ecommerce/src/components/SideBar/Sidebar.js"],"sourcesContent":["// import \"./Sidebar.css\"\n// import { useState, useEffect } from 'react';\n// import categories from \"./sidebarCategories.json\"\n\n// export default function Sidebar(props) {\n//     const { onCategoryChange, toggleSidebar, showSidebar } = props;\n//     const [selectedCategories, setSelectedCategories] = useState([]);\n  \n//     const handleCheckboxChange = (event) => {\n//       const checkboxValue = event.target.value;\n//       let newSelectedCategories = [];\n//       if (selectedCategories.includes(checkboxValue)) {\n//         newSelectedCategories = selectedCategories.filter(\n//           (category) => category !== checkboxValue\n//         );\n//       } else {\n//         newSelectedCategories = [...selectedCategories, checkboxValue];\n//       }\n//       setSelectedCategories(newSelectedCategories);\n//       onCategoryChange(newSelectedCategories);\n  \n//       // Construct the new URL with the modified parameters\n//       const queryParams = new URLSearchParams(window.location.search);\n//       queryParams.set(\"category\", newSelectedCategories.join(\",\"));\n//       const newUrl = `${window.location.pathname}?${queryParams.toString()}`;\n  \n//       // Update the URL\n//       window.history.pushState(null, '', newUrl);\n//     };\n  \n//     // Parse the category parameter from the URL on component mount\n//     useEffect(() => {\n//       const queryParams = new URLSearchParams(window.location.search);\n//       const categoryParam = queryParams.get(\"category\");\n//       if (categoryParam) {\n//         setSelectedCategories(categoryParam.split(\",\"));\n//       }\n//     }, []);\n  \n//     return (\n//       <div className={`sidebarContainer ${showSidebar ? 'active' : ''}`}>\n//         <div className=\"sidebarContent\">\n//           <h2>Categories</h2>\n//           <ul>\n//             {categories.map((category) => (\n//               <li className=\"categoryItem\" key={category.id}>\n//                 <input\n//                   type=\"checkbox\"\n//                   value={category.name}\n//                   checked={selectedCategories.includes(category.name)}\n//                   onChange={handleCheckboxChange}\n//                 />\n//                 <p>{category.label}</p>\n//               </li>\n//             ))}\n//           </ul>\n//           <button className=\"saveBtn\" onClick={toggleSidebar}>\n//             Save &amp; Search\n//           </button>\n//         </div>\n//       </div>\n//     );\n//   }"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}