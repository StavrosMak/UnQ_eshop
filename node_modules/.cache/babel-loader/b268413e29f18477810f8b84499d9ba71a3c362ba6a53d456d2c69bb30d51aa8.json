{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nconst useCart = () => {\n  _s();\n  const [cart, setCart] = useState([]);\n  const [cartLength, setCartLength] = useState(0);\n  useEffect(() => {\n    // Retrieve cart data from local storage or initialize an empty array\n    const initialCart = JSON.parse(localStorage.getItem('cart')) || [];\n    setCart(initialCart);\n    setCartLength(initialCart.reduce((total, item) => total + item.quantity, 0));\n  }, []);\n  useEffect(() => {\n    // Update local storage whenever the cart changes\n    localStorage.setItem('cart', JSON.stringify(cart));\n    setCartLength(cart.reduce((total, item) => total + item.quantity, 0));\n  }, [cart]);\n  const handleAddToCart = item => {\n    const existingItem = cart.find(cartItem => cartItem.id === item.id);\n    if (existingItem) {\n      setCart(cart.map(cartItem => cartItem.id === item.id ? {\n        ...cartItem,\n        quantity: cartItem.quantity + 1\n      } : cartItem));\n    } else {\n      setCart([...cart, {\n        ...item,\n        quantity: 1\n      }]);\n    }\n  };\n  return {\n    handleAddToCart,\n    cartLength\n  };\n};\n_s(useCart, \"6PyaCyY3eJwIeZ0SaE12mMtPfsQ=\");\nexport default useCart;","map":{"version":3,"names":["useState","useEffect","useCart","_s","cart","setCart","cartLength","setCartLength","initialCart","JSON","parse","localStorage","getItem","reduce","total","item","quantity","setItem","stringify","handleAddToCart","existingItem","find","cartItem","id","map"],"sources":["/home/stv/Documents/Web/React/ecommerce/src/useCart.js"],"sourcesContent":["import { useState, useEffect } from 'react';\n\nconst useCart = () => {\n  const [cart, setCart] = useState([]);\n  const [cartLength, setCartLength] = useState(0);\n\n  useEffect(() => {\n    // Retrieve cart data from local storage or initialize an empty array\n    const initialCart = JSON.parse(localStorage.getItem('cart')) || [];\n    setCart(initialCart);\n    setCartLength(initialCart.reduce((total, item) => total + item.quantity, 0));\n  }, []);\n\n  useEffect(() => {\n    // Update local storage whenever the cart changes\n    localStorage.setItem('cart', JSON.stringify(cart));\n    setCartLength(cart.reduce((total, item) => total + item.quantity, 0));\n  }, [cart]);\n\n  const handleAddToCart = (item) => {\n    const existingItem = cart.find((cartItem) => cartItem.id === item.id);\n\n    if (existingItem) {\n      setCart(cart.map((cartItem) => (cartItem.id === item.id ? { ...cartItem, quantity: cartItem.quantity + 1 } : cartItem)));\n    } else {\n      setCart([...cart, { ...item, quantity: 1 }]);\n    }\n  };\n\n  return { handleAddToCart, cartLength };\n};\n\nexport default useCart;\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACM,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC;EAE/CC,SAAS,CAAC,MAAM;IACd;IACA,MAAMO,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE;IAClEP,OAAO,CAACG,WAAW,CAAC;IACpBD,aAAa,CAACC,WAAW,CAACK,MAAM,CAAC,CAACC,KAAK,EAAEC,IAAI,KAAKD,KAAK,GAAGC,IAAI,CAACC,QAAQ,EAAE,CAAC,CAAC,CAAC;EAC9E,CAAC,EAAE,EAAE,CAAC;EAENf,SAAS,CAAC,MAAM;IACd;IACAU,YAAY,CAACM,OAAO,CAAC,MAAM,EAAER,IAAI,CAACS,SAAS,CAACd,IAAI,CAAC,CAAC;IAClDG,aAAa,CAACH,IAAI,CAACS,MAAM,CAAC,CAACC,KAAK,EAAEC,IAAI,KAAKD,KAAK,GAAGC,IAAI,CAACC,QAAQ,EAAE,CAAC,CAAC,CAAC;EACvE,CAAC,EAAE,CAACZ,IAAI,CAAC,CAAC;EAEV,MAAMe,eAAe,GAAIJ,IAAI,IAAK;IAChC,MAAMK,YAAY,GAAGhB,IAAI,CAACiB,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,EAAE,KAAKR,IAAI,CAACQ,EAAE,CAAC;IAErE,IAAIH,YAAY,EAAE;MAChBf,OAAO,CAACD,IAAI,CAACoB,GAAG,CAAEF,QAAQ,IAAMA,QAAQ,CAACC,EAAE,KAAKR,IAAI,CAACQ,EAAE,GAAG;QAAE,GAAGD,QAAQ;QAAEN,QAAQ,EAAEM,QAAQ,CAACN,QAAQ,GAAG;MAAE,CAAC,GAAGM,QAAS,CAAC,CAAC;IAC1H,CAAC,MAAM;MACLjB,OAAO,CAAC,CAAC,GAAGD,IAAI,EAAE;QAAE,GAAGW,IAAI;QAAEC,QAAQ,EAAE;MAAE,CAAC,CAAC,CAAC;IAC9C;EACF,CAAC;EAED,OAAO;IAAEG,eAAe;IAAEb;EAAW,CAAC;AACxC,CAAC;AAACH,EAAA,CA5BID,OAAO;AA8Bb,eAAeA,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}